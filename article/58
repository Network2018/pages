<!-- build time:Tue May 01 2018 19:40:14 GMT+0800 (中国标准时间) --><!DOCTYPE html><html><head><meta http-equiv="content-type" content="text/html; charset=utf-8"><meta content="width=device-width,initial-scale=1,maximum-scale=1,user-scalable=0" name="viewport"><link href="https://static.sometimesnaive.org:9004/deps/imgs/favicon.ico" type="image/x-icon" rel="icon"><title>本博客 Nginx 配置（第二季） | 南琴浪博客</title><link href="https://static.sometimesnaive.org:9004/deps/css/style.min.css" type="text/css" rel="stylesheet"><script src="https://static.sometimesnaive.org:9004/deps/js/jquery.min.js" type="application/javascript"></script><link href="https://static.sometimesnaive.org:9004/deps/css/nprogress.min.css" type="text/css" rel="stylesheet"><script src="https://static.sometimesnaive.org:9004/deps/js/nprogress.min.js" type="application/javascript"></script><link href="https://static.sometimesnaive.org:9004/deps/css/prism.min.css" type="text/css" rel="stylesheet"><script src="https://static.sometimesnaive.org:9004/deps/js/prism.min.js" type="application/javascript"></script><link href="https://static.sometimesnaive.org:9004/deps/css/gitment.min.css" type="text/css" rel="stylesheet"><script src="https://static.sometimesnaive.org:9004/deps/js/gitment.min.js" type="application/javascript"></script></head><body><header class="header fixed-header"><div class="header-container"><a class="home-link" href="/">南琴浪博客</a><ul class="right-list"><li class="list-item"><a href="/" class="item-link">Home</a></li><li class="list-item"><a href="/archive/" class="item-link">Archive</a></li><li class="list-item"><a href="/portal/feed" class="item-link">RSS</a></li><li class="list-item"><a href="/portal/friendly-links" class="item-link">Links</a></li></ul><div class="menu-mask"><ul class="menu-list"><li class="menu-item"><a href="/" class="menu-link">Home</a></li><li class="menu-item"><a href="/archive/" class="menu-link">Archive</a></li><li class="menu-item"><a href="/portal/feed" class="menu-link">RSS</a></li><li class="menu-item"><a href="/portal/friendly-links" class="menu-link">Links</a></li></ul></div></div></header><div id="article-banner"><h2>本博客 Nginx 配置（第二季）</h2><p class="post-date">03/05/2018</p></div><main class="app-body flex-box"><article class="post-article"><section class="markdown-content"><p>在之前，本博客完成了 “本博客 Nginx 配置” 的系列文章。而就在这之后，我又对着自己的配置文件唰唰唰的改了起来。遂有了这里的第二季。<br><a id="more"></a></p><p>本文所述配置，涉及到的设置项目，与之前有些细微区别。主要是整体框架的区别，在第二季中我采用了 proxy_pass 把三个源站放到一个主 server 的写法，而在之前的第一季中我把站点全部配置到了 443 端口下。并且第二季中，在细节上进行了更多细分，也新增了一些特性。</p><p>本文涉及的内容均位于 <a href="https://sometimesnaive.org/article/29">本博客 Nginx 配置（第一季）</a> 中</p><h2 id="全局配置"><a href="#全局配置" class="headerlink" title="全局配置"></a>全局配置</h2><p>Nginx 的全局配置位于 <code>nginx.conf</code> 中：</p><pre><code class="language-nginx"># 运行 Nginx 的用户组和用户
user                  naive naive;
# 进程数，一般设置为 CPU 核心数的两倍，推荐使用 auto 即可
worker_processes      auto;
# 错误日志路径
error_log             /home/nginx/logs/error.log crit;
# pid 路径
pid                   /home/nginx/sbin/nginx.pid;
# 最大访问文件数限制
worker_rlimit_nofile  4096;

events {
    use                    epoll;
    epoll_events        4096;
    worker_connections    4096;
    multi_accept        off;
    accept_mutex        on;
    accept_mutex_delay    500ms;
}

http {
    include            mime_types.conf;
    default_type    text/html;

    log_format  format &#39;[$time_local] [ $remote_addr $http_user_agent] [$status $request_time] [$http_host $request] [$http_referer]&#39;;

    limit_conn_zone  $binary_remote_addr  zone=proxypass_conn_ip:1m;
    limit_conn_zone  $server_name          zone=proxypass_conn_server:10m;
    limit_conn_zone  $binary_remote_addr  zone=metarewrite_conn_ip:1m;
    limit_conn_zone  $server_name          zone=metarewrite_conn_server:10m;
    limit_conn_status 503;

    limit_req_zone     $binary_remote_addr  zone=metarewrite_req_ip:1m  rate=5r/s;
    limit_req_status  503;

    client_header_buffer_size    4k;
    client_body_buffer_size        16k;
    large_client_header_buffers    8 8k;
    client_max_body_size        2m;

    client_body_timeout            20s;
    client_header_timeout        10s;
    send_timeout                30s;
    keepalive_timeout            0s;

    sendfile                    on;
    tcp_nopush                    on;
    tcp_nodelay                    off;

    proxy_cache_path            /home/nginx/proxy_cache/cache levels=1:2 keys_zone=proxycache:60m max_size=120m inactive=24h use_temp_path=off;
    proxy_cache_key                $host$uri;

    open_log_file_cache            max=4096 min_uses=1 valid=10m inactive=10m;
    open_file_cache                max=4096 inactive=24h;
    open_file_cache_min_uses    3;
    open_file_cache_valid        24h;
    open_file_cache_errors        off;

    ssl_session_tickets         on;
    ssl_session_ticket_key        /home/site/crt/ssl_session_ticket.key;
    ssl_session_cache            shared:ssl_session_cache:1m;
    ssl_session_timeout            30m;

    include  nginx-0-proxypass.conf;
    include  nginx-1-hexo.conf;
    include  nginx-2-metarewrite.conf;
    include  nginx-gzipbrotli.conf;
}
</code></pre><h2 id="站点配置"><a href="#站点配置" class="headerlink" title="站点配置"></a>站点配置</h2><p>从上面的配置文件可以看出，本站的站点配置 include 四个部分：</p><ul><li>nginx-0-proxypass.conf</li><li>nginx-1-hexo.conf</li><li>nginx-2-metarewrite.conf</li><li>nginx-gzipbrotli.conf</li></ul><h3 id="nginx-0-proxypass-conf"><a href="#nginx-0-proxypass-conf" class="headerlink" title="nginx-0-proxypass.conf;"></a>nginx-0-proxypass.conf;</h3><pre><code class="language-nginx">server {
    #listen 443 ssl spdy http2 fastopen=3 reuseport;
    #本博客已取消 spdy 和 http/2 特性
    listen 443 ssl fastopen=3 reuseport;

    limit_conn  proxypass_conn_ip        10;
    limit_conn  proxypass_conn_server    100;

    access_log        /home/site/access-log/access.log logformat;
    log_not_found    off;

    server_name   sometimesnaive.org;

    ssl_ecdh_curve P-256;
    ssl_prefer_server_ciphers on;
    ssl_dhparam      /home/site/crt/dhparam-4096.pem;
    ssl_protocols TLSv1.2;
    ssl_ciphers   &#39;ECDHE-ECDSA-AES128-GCM-SHA256 ECDHE-ECDSA-CHACHA20-POLY1305 ECDHE-ECDSA-AES256-GCM-SHA384&#39;;

    ssl_certificate        /home/site/crt/comodo/comodoecc-chained.crt;
    ssl_certificate_key /home/site/crt/comodo/comodoecc.key;

    ssl_stapling            on;
    ssl_stapling_verify     on;
    ssl_trusted_certificate /home/site/crt/comodo/comodoecc-bundle.crt;
    resolver                208.67.222.222 valid=30m;
    resolver_timeout        10s;

    add_header  Strict-Transport-Security     &quot;max-age=31536000; preload; includeSubDomains&quot; always;
    add_header  X-Frame-Options                 &quot;deny&quot; always;
    add_header  X-Content-Type-Options         &quot;nosniff&quot; always;
    add_header  X-Xss-Protection             &quot;1; mode=block&quot; always;
    add_header    Access-Control-Allow-Origin  &quot;*&quot; always;


    location / {
        proxy_pass                    http://localhost:9002;
        proxy_http_version            1.1;
        proxy_ignore_headers        Set-Cookie;

        proxy_set_header            User-Agent    $http_user_agent;
        proxy_set_header            Referer        $http_referer;

        proxy_cache                    proxycache;
        proxy_cache_valid            304 24h;
        proxy_cache_valid            404 24h;
        proxy_cache_valid            403 444 24h;
        proxy_cache_valid            500 502 503 10m;
        proxy_cache_use_stale        invalid_header http_404 http_403 http_500 http_502 http_503;
        proxy_cache_lock            on;
        proxy_cache_lock_timeout    10s;

        proxy_buffering                on;
        proxy_buffers                16 20k;
        proxy_buffer_size            4k;
        proxy_busy_buffers_size        24k;
        proxy_max_temp_file_size    2m;

        if ($request_method !~ ^(GET)$ ) {
            return 444;
        }
    }
}
</code></pre><h3 id="nginx-1-hexo-conf"><a href="#nginx-1-hexo-conf" class="headerlink" title="nginx-1-hexo.conf"></a>nginx-1-hexo.conf</h3><pre><code class="language-nginx">server {
    listen 9000;

    root   /home/site/blog;
    index  index.html;

    access_log    off;

    allow  127.0.0.1;
    deny   all;

    include  nginx-gzipbrotli.conf;

    etag        on;
    add_header  Cache-Control &quot;public, max-age=21600, must-revalidate&quot; always;

    error_page 404 /404;

    location = /404 {
        if ($http_user_agent ~* &quot;Googlebot&quot;) {
            return 403;
        }
    }
}
</code></pre><h3 id="nginx-2-metarewrite-conf"><a href="#nginx-2-metarewrite-conf" class="headerlink" title="nginx-2-metarewrite.conf"></a>nginx-2-metarewrite.conf</h3><pre><code class="language-nginx">server {
    listen 80;

    limit_conn metarewrite_conn_ip        10;
    limit_conn metarewrite_conn_server    100;
    limit_req  zone=metarewrite_req_ip    burst=5 nodelay;

    access_log        /home/site/access-log/access.log logformat;
    log_not_found    off;

    include  nginx-gzipbrotli.conf;

    server_name   sometimesnaive.org;

    # 使用 meta.html 刷新网页来达到重定向
    # 根据 meta.html 中的内容，一律重定向到 https://sometimesnaive.org/
    root   /home/site/meta;
    index  meta.html;

    # 将 404 的页面重定向到 https 的首页
    #error_page 404 https://sometimesnaive.org/;
    error_page 404 meta.html;

    add_header  X-Frame-Options                &quot;deny&quot; always;
    add_header  X-Content-Type-Options        &quot;nosniff&quot; always;
    add_header  X-Xss-Protection            &quot;1; mode=block&quot; always;
    add_header    Access-Control-Allow-Origin &quot;*&quot; always;

    etag       on;
    add_header Cache-Control &quot;public, max-age=31536000, must-revalidate&quot; always;
}
</code></pre><h3 id="nginx-gzipbrotli-conf"><a href="#nginx-gzipbrotli-conf" class="headerlink" title="nginx-gzipbrotli.conf"></a>nginx-gzipbrotli.conf</h3><pre><code class="language-nginx">    brotli                on;
    brotli_min_length    20;
    brotli_buffers        16 10k;
    brotli_window        512k;
    brotli_comp_level    6;
    brotli_types        text/html text/xml text/plain application/json text/css image/svg application/font-woff application/vnd.ms-fontobject application/vnd.apple.mpegurl application/javascript image/x-icon image/jpeg image/gif image/png;
    brotli_static        always;

    gzip                on;
    gzip_vary            on;
    gzip_min_length        20;
    gzip_buffers        16 10k;
    gzip_comp_level     3;
    gzip_proxied        any;
    gzip_types             text/html text/xml text/plain application/json text/css image/svg application/font-woff application/vnd.ms-fontobject application/vnd.apple.mpegurl application/javascript image/x-icon image/jpeg image/gif image/png;
    gzip_http_version    1.0;
    gzip_disable        &quot;msie6&quot;;
    gzip_static            always;
    gunzip                on;
</code></pre><p>本文最后更新： 2018-03-24</p></section><br><div class="article-footer"><br><p>本文可能过时失效，若需更新，请留言</p><p>本博客文章均为原创，转载请注明来源</p></div><div class="nav-container"><a class="nav-right" href="/article/57">Nginx 配置 HTTP 跳转 HTTPS <span class="nav-arrow">→</span> </a><a class="nav-left" href="/article/59"><span class="nav-arrow">← </span>Unbound - 强大的 DNS 服务</a></div><div id="comments"></div></article><aside class="catalog-container"><div class="toc-main"><strong class="toc-title">Catalog</strong><ol class="toc-nav"><li class="toc-nav-item toc-nav-level-2"><a class="toc-nav-link" href="#全局配置"><span class="toc-nav-text">全局配置</span></a></li><li class="toc-nav-item toc-nav-level-2"><a class="toc-nav-link" href="#站点配置"><span class="toc-nav-text">站点配置</span></a><ol class="toc-nav-child"><li class="toc-nav-item toc-nav-level-3"><a class="toc-nav-link" href="#nginx-0-proxypass-conf"><span class="toc-nav-text">nginx-0-proxypass.conf;</span></a></li><li class="toc-nav-item toc-nav-level-3"><a class="toc-nav-link" href="#nginx-1-hexo-conf"><span class="toc-nav-text">nginx-1-hexo.conf</span></a></li><li class="toc-nav-item toc-nav-level-3"><a class="toc-nav-link" href="#nginx-2-metarewrite-conf"><span class="toc-nav-text">nginx-2-metarewrite.conf</span></a></li><li class="toc-nav-item toc-nav-level-3"><a class="toc-nav-link" href="#nginx-gzipbrotli-conf"><span class="toc-nav-text">nginx-gzipbrotli.conf</span></a></li></ol></li></ol></div></aside></main><script>!function(){var e="https://static.sometimesnaive.org:9004/deps/imgs/banner.jpg";$("#article-banner").css({"background-image":"url("+e+")"}),$(".header").removeClass("fixed-header")}()</script><script>(function(){
    var gitmentConfig = "nanqinlang"
    if (gitmentConfig !== 'undefined') {
        var gitment = new Gitment({
            id: "58",
            owner: "nanqinlang",
            repo: "sometimesnaive.org",
            oauth: {client_id: "b0612de512484ab34c7a", client_secret: "c2bc4cd3c947097d2ccc4c16f120d50458314dd0"},
            theme: {render(state, instance){const container = document.createElement('div');container.lang="en-US";container.className='gitment-container gitment-root-container';container.appendChild(instance.renderHeader(state, instance));container.appendChild(instance.renderEditor(state, instance));container.appendChild(instance.renderComments(state, instance));container.appendChild(instance.renderFooter(state, instance));return container;}}
        })
        gitment.render(document.getElementById('comments'))
    }
})();</script><div class="scroll-top"><span class="arrow-icon"></span></div><footer class="app-footer"><p class="copyright" align="center">&copy; 2017 - 2018 南琴浪博客 <a>(sometimesnaive.org)<a></a></a></p></footer><script src="https://static.sometimesnaive.org:9004/deps/js/function.min.js" type="application/javascript"></script><script>window.ga=window.ga||function(){(ga.q=ga.q||[]).push(arguments)},ga.l=+new Date,ga("create","UA-108266909-1","auto"),ga("send","pageview")</script><script async src="https://www.google-analytics.com/analytics.js" type="application/javascript"></script></body></html><!-- rebuild by neat -->