<!-- build time:Tue May 01 2018 19:40:14 GMT+0800 (中国标准时间) --><!DOCTYPE html><html><head><meta http-equiv="content-type" content="text/html; charset=utf-8"><meta content="width=device-width,initial-scale=1,maximum-scale=1,user-scalable=0" name="viewport"><link href="https://static.sometimesnaive.org:9004/deps/imgs/favicon.ico" type="image/x-icon" rel="icon"><title>RustRssBot - Telegram RSS Bot | 南琴浪博客</title><link href="https://static.sometimesnaive.org:9004/deps/css/style.min.css" type="text/css" rel="stylesheet"><script src="https://static.sometimesnaive.org:9004/deps/js/jquery.min.js" type="application/javascript"></script><link href="https://static.sometimesnaive.org:9004/deps/css/nprogress.min.css" type="text/css" rel="stylesheet"><script src="https://static.sometimesnaive.org:9004/deps/js/nprogress.min.js" type="application/javascript"></script><link href="https://static.sometimesnaive.org:9004/deps/css/prism.min.css" type="text/css" rel="stylesheet"><script src="https://static.sometimesnaive.org:9004/deps/js/prism.min.js" type="application/javascript"></script><link href="https://static.sometimesnaive.org:9004/deps/css/gitment.min.css" type="text/css" rel="stylesheet"><script src="https://static.sometimesnaive.org:9004/deps/js/gitment.min.js" type="application/javascript"></script></head><body><header class="header fixed-header"><div class="header-container"><a class="home-link" href="/">南琴浪博客</a><ul class="right-list"><li class="list-item"><a href="/" class="item-link">Home</a></li><li class="list-item"><a href="/archive/" class="item-link">Archive</a></li><li class="list-item"><a href="/portal/feed" class="item-link">RSS</a></li><li class="list-item"><a href="/portal/friendly-links" class="item-link">Links</a></li></ul><div class="menu-mask"><ul class="menu-list"><li class="menu-item"><a href="/" class="menu-link">Home</a></li><li class="menu-item"><a href="/archive/" class="menu-link">Archive</a></li><li class="menu-item"><a href="/portal/feed" class="menu-link">RSS</a></li><li class="menu-item"><a href="/portal/friendly-links" class="menu-link">Links</a></li></ul></div></div></header><div id="article-banner"><h2>RustRssBot - Telegram RSS Bot</h2><p class="post-date">03/31/2018</p></div><main class="app-body flex-box"><article class="post-article"><section class="markdown-content"><p>本文介绍 RustRssBot 及其自建配置。<br><a id="more"></a></p><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p><a href="https://github.com/iovxw/rssbot">RustRssBot</a> 是基于 Rust 语言的用于实现 RSS 订阅功能的 Telegram Bot，你可以通过 @rustrssbot 在 Telegram 中找到它。</p><p>本文仅对 RustRssBot 所需服务端（你的 VPS 上）进行介绍，至于客户端（Telegram Bot）部分请自行解决。</p><h2 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h2><p>原项目的 RSS 更新频率是每 5 分钟获取一次，这个频率实在有点高了。所以我的 <a href="https://github.com/nanqinlang-mogic/RustRssBot">修改版本</a> 将频率修改为 2h /次。你也可以通过 @mogic_rust_bot 找到我修改后的 bot。</p><p>先 clone 源码下来：</p><pre><code class="language-bash">git clone https://github.com/iovxw/rssbot.git
</code></pre><p>然后打开 <code>src/main.rs</code>，在该文件中找到这段代码：</p><pre><code class="language-rust">fn main() {
    let args: Vec&lt;String&gt; = std::env::args().collect();
    if args.len() &lt; 3 {
        eprintln!(&quot;usage: {} $DATAFILE-name $TELEGRAM-BOT-TOKEN&quot;, args[0]);
        std::process::exit(1);
    }
    let datafile = &amp;args[1];
    let token = &amp;args[2];
    let period = args.get(3)
        .map(|s| {
            s.parse().unwrap_or_else(|_| {
                eprintln!(&quot;period must be unsigned&quot;);
                std::process::exit(1);
            })
        })
        .unwrap_or(300);
</code></pre><p>其中 <code>.unwrap_or(300);</code> 这行就表示 <code>每 300 秒更新一次</code>，这就是我要修改的更新频率。</p><p>我把频率修改为 2h /次，那就是 7200 秒</p><pre><code class="language-rust">    .unwrap_or(7200);
</code></pre><h2 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h2><p>那么接下来就是编译了，这部分在我的 readme 里也有过说明。</p><pre><code class="language-bash"># clone source
git clone https://github.com/nanqinlang-mogic/RustRssBot.git

# Rust &amp; Cargo environment
curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain nightly
source $HOME/.cargo/env

# dependences
apt-get install -y openssl libssl-dev pkg-config

# then start compile it
cd source
cargo build --release
</code></pre><p>编译成功的话，编译完成后的可执行文件 <code>rssbot</code> 会被发送到 <code>/target/release/rssbot</code> 路径。之后你把这个文件保存下来，不需要每次都再编译了。</p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>在上文已提到，建立一个 bot 是需要同时有服务端和客户端的。</p><h3 id="服务端"><a href="#服务端" class="headerlink" title="服务端"></a>服务端</h3><p>服务端的运行方式和原项目相同：</p><pre><code class="language-bash">wget https://github.com/nanqinlang-mogic/RustRssBot/releases/download/1.1/rssbot
chmod +x rssbot
nohup ./rssbot datafile ${TELEGRAM-BOT-TOKEN} &amp;
</code></pre><p>昨晚新增了一个 <a href="https://github.com/nanqinlang-mogic/RustRssBot/blob/31.March/installation.sh">脚本</a> 来实现服务端的安装。</p><h3 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h3><p>和原项目的 directive 有点不同，我的 bot 是这样用的：</p><table><thead><tr><th style="text-align:left">command</th><th style="text-align:left">function</th><th style="text-align:left">parameter</th></tr></thead><tbody><tr><td style="text-align:left">list</td><td style="text-align:left">show subscribe list</td><td style="text-align:left">/list (${Channel-Username}) (display-url)</td></tr><tr><td style="text-align:left">subscribe</td><td style="text-align:left">subscribe one</td><td style="text-align:left">/subscribe (${Channel-Username}) ${rss-url}</td></tr><tr><td style="text-align:left">unsubscribe</td><td style="text-align:left">unsubscribe one</td><td style="text-align:left">/unsubscribe (${Channel-Username}) ${rss-url}</td></tr></tbody></table></section><br><div class="article-footer"><br><p>本文可能过时失效，若需更新，请留言</p><p>本博客文章均为原创，转载请注明来源</p></div><div class="nav-container"><a class="nav-right" href="/article/66">开始使用无特性博客 <span class="nav-arrow">→</span> </a><a class="nav-left" href="/article/68"><span class="nav-arrow">← </span>开始使用 ngx_lua</a></div><div id="comments"></div></article><aside class="catalog-container"><div class="toc-main"><strong class="toc-title">Catalog</strong><ol class="toc-nav"><li class="toc-nav-item toc-nav-level-2"><a class="toc-nav-link" href="#介绍"><span class="toc-nav-text">介绍</span></a></li><li class="toc-nav-item toc-nav-level-2"><a class="toc-nav-link" href="#修改"><span class="toc-nav-text">修改</span></a></li><li class="toc-nav-item toc-nav-level-2"><a class="toc-nav-link" href="#编译"><span class="toc-nav-text">编译</span></a></li><li class="toc-nav-item toc-nav-level-2"><a class="toc-nav-link" href="#使用"><span class="toc-nav-text">使用</span></a><ol class="toc-nav-child"><li class="toc-nav-item toc-nav-level-3"><a class="toc-nav-link" href="#服务端"><span class="toc-nav-text">服务端</span></a></li><li class="toc-nav-item toc-nav-level-3"><a class="toc-nav-link" href="#客户端"><span class="toc-nav-text">客户端</span></a></li></ol></li></ol></div></aside></main><script>!function(){var e="https://static.sometimesnaive.org:9004/deps/imgs/banner.jpg";$("#article-banner").css({"background-image":"url("+e+")"}),$(".header").removeClass("fixed-header")}()</script><script>(function(){
    var gitmentConfig = "nanqinlang"
    if (gitmentConfig !== 'undefined') {
        var gitment = new Gitment({
            id: "67",
            owner: "nanqinlang",
            repo: "sometimesnaive.org",
            oauth: {client_id: "b0612de512484ab34c7a", client_secret: "c2bc4cd3c947097d2ccc4c16f120d50458314dd0"},
            theme: {render(state, instance){const container = document.createElement('div');container.lang="en-US";container.className='gitment-container gitment-root-container';container.appendChild(instance.renderHeader(state, instance));container.appendChild(instance.renderEditor(state, instance));container.appendChild(instance.renderComments(state, instance));container.appendChild(instance.renderFooter(state, instance));return container;}}
        })
        gitment.render(document.getElementById('comments'))
    }
})();</script><div class="scroll-top"><span class="arrow-icon"></span></div><footer class="app-footer"><p class="copyright" align="center">&copy; 2017 - 2018 南琴浪博客 <a>(sometimesnaive.org)<a></a></a></p></footer><script src="https://static.sometimesnaive.org:9004/deps/js/function.min.js" type="application/javascript"></script><script>window.ga=window.ga||function(){(ga.q=ga.q||[]).push(arguments)},ga.l=+new Date,ga("create","UA-108266909-1","auto"),ga("send","pageview")</script><script async src="https://www.google-analytics.com/analytics.js" type="application/javascript"></script></body></html><!-- rebuild by neat -->